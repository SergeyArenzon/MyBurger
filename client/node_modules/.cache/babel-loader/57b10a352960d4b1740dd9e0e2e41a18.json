{"ast":null,"code":"import _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nvar ContactData = /*#__PURE__*/function (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\"\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\"\n        },\n        countery: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\"\n        },\n        deliveryMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            }],\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\"\n        }\n      }\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        ordered: true\n      });\n\n      var ingredients = _this.props.ingredients;\n      var price = _this.props.price;\n      var orderSchema = orderSchema; //   push new order\n\n      var order = {\n        ingredients: ingredients,\n        price: price,\n        name: _this.state.name,\n        email: _this.state.email,\n        address: {\n          street: _this.state.address.street,\n          zipCode: _this.state.address.postalCode\n        }\n      }; // alert(this.state.name)\n\n      axios.post(\"http://localhost:5000/orders/add\", order).then(function (response) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        _this.props.history.push(\"/\");\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"[ContactData componentDidMount]\");\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"[ContactData componentDidUpdate]\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ordered = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"Enter contact data\"), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        inputtype: \"input\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        inputtype: \"input\",\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Your Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        inputtype: \"input\",\n        type: \"text\",\n        name: \"street\",\n        placeholder: \"Street\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        inputtype: \"input\",\n        type: \"text\",\n        name: \"postal\",\n        placeholder: \"Postal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, \"ORDER\")));\n\n      if (this.state.ordered) {\n        ordered = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 23\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }\n      }, ordered);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","countery","email","deliveryMethod","options","displayValue","orderHandler","event","preventDefault","setState","ordered","ingredients","props","price","orderSchema","order","address","postalCode","post","then","response","loading","purchasing","history","push","catch","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;IAEMC,W;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,WAAW,EAAE,OADX;AAEFC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFb;AAMFC,UAAAA,KAAK,EAAE;AANL,SADC;AASPC,QAAAA,MAAM,EAAE;AACJL,UAAAA,WAAW,EAAE,OADT;AAEJC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFX;AAMJC,UAAAA,KAAK,EAAE;AANH,SATD;AAiBPE,QAAAA,OAAO,EAAE;AACLN,UAAAA,WAAW,EAAE,OADR;AAELC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFV;AAMLC,UAAAA,KAAK,EAAE;AANF,SAjBF;AAyBPG,QAAAA,QAAQ,EAAE;AACNP,UAAAA,WAAW,EAAE,OADP;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFT;AAMNC,UAAAA,KAAK,EAAE;AAND,SAzBH;AAiCPI,QAAAA,KAAK,EAAE;AACHR,UAAAA,WAAW,EAAE,OADV;AAEHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,OADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFZ;AAMHC,UAAAA,KAAK,EAAE;AANJ,SAjCA;AAyCPK,QAAAA,cAAc,EAAE;AACZT,UAAAA,WAAW,EAAE,QADD;AAEZC,UAAAA,aAAa,EAAE;AACXS,YAAAA,OAAO,EAAE,CAAC;AAAEN,cAAAA,KAAK,EAAE,SAAT;AAAoBO,cAAAA,YAAY,EAAE;AAAlC,aAAD,CADE;AAEXR,YAAAA,WAAW,EAAE;AAFF,WAFH;AAMZC,UAAAA,KAAK,EAAE;AANK;AAzCT;AADP,K;;UA0DRQ,Y,GAAe,UAACC,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAMC,WAAW,GAAG,MAAKC,KAAL,CAAWD,WAA/B;AACA,UAAME,KAAK,GAAG,MAAKD,KAAL,CAAWC,KAAzB;AAEA,UAAMC,WAAW,GAAGA,WAApB,CAPsB,CAQtB;;AAEA,UAAMC,KAAK,GAAG;AACVJ,QAAAA,WAAW,EAAEA,WADH;AAEVE,QAAAA,KAAK,EAAEA,KAFG;AAGVpB,QAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAHP;AAIVS,QAAAA,KAAK,EAAE,MAAKX,KAAL,CAAWW,KAJR;AAKVc,QAAAA,OAAO,EAAE;AACLjB,UAAAA,MAAM,EAAE,MAAKR,KAAL,CAAWyB,OAAX,CAAmBjB,MADtB;AAELC,UAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWyB,OAAX,CAAmBC;AAFvB;AALC,OAAd,CAVsB,CAqBtB;;AAEA9B,MAAAA,KAAK,CACA+B,IADL,CACU,kCADV,EAC8CH,KAD9C,EAEKI,IAFL,CAEU,UAACC,QAAD,EAAc;AAChB,cAAKX,QAAL,CAAc;AAAEY,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAAd;;AACA,cAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,OALL,EAMKC,KANL,CAMW,UAACC,KAAD,EAAW;AACd,cAAKjB,QAAL,CAAc;AAAEY,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAAd;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OATL;AAUH,K;;;;;;;wCAvCmB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;;;yCACoB;AACjBD,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH;;;6BAoCQ;AACL,UAAIlB,OAAO,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAOI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,WAAW,EAAC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eAaI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,WAAW,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,eAmBI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,WAAW,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,eAyBI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKJ,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBJ,CAFJ,CADJ;;AAmCA,UAAI,KAAKf,KAAL,CAAWmB,OAAf,EAAwB;AACpBA,QAAAA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;;AAED,0BAAO;AAAK,QAAA,SAAS,EAAExB,OAAO,CAACI,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCoB,OAAtC,CAAP;AACH;;;;EAvIqB1B,S;;AA0I1B,eAAeM,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Your Name\",\n                },\n                value: \"\",\n            },\n            street: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Street\",\n                },\n                value: \"\",\n            },\n            zipCode: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"ZIP Code\",\n                },\n                value: \"\",\n            },\n            countery: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Country\",\n                },\n                value: \"\",\n            },\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"Your Email\",\n                },\n                value: \"\",\n            },\n            deliveryMethod: {\n                elementType: \"select\",\n                elementConfig: {\n                    options: [{ value: \"fastest\", displayValue: \"Fastest\" }],\n                    placeholder: \"ZIP Code\",\n                },\n                value: \"\",\n            },\n        },\n    };\n    componentDidMount() {\n        console.log(\"[ContactData componentDidMount]\");\n    }\n    componentDidUpdate() {\n        console.log(\"[ContactData componentDidUpdate]\");\n    }\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ ordered: true });\n\n        const ingredients = this.props.ingredients;\n        const price = this.props.price;\n\n        const orderSchema = orderSchema;\n        //   push new order\n\n        const order = {\n            ingredients: ingredients,\n            price: price,\n            name: this.state.name,\n            email: this.state.email,\n            address: {\n                street: this.state.address.street,\n                zipCode: this.state.address.postalCode,\n            },\n        };\n\n        // alert(this.state.name)\n\n        axios\n            .post(\"http://localhost:5000/orders/add\", order)\n            .then((response) => {\n                this.setState({ loading: false, purchasing: false });\n                this.props.history.push(\"/\");\n            })\n            .catch((error) => {\n                this.setState({ loading: false, purchasing: false });\n                console.log(error);\n            });\n    };\n\n    render() {\n        let ordered = (\n            <div>\n                <h4>Enter contact data</h4>\n                <form>\n                    <Input\n                        inputtype=\"input\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Your Name\"\n                    />\n                    <Input\n                        inputtype=\"input\"\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Your Email\"\n                    />\n                    <Input\n                        inputtype=\"input\"\n                        type=\"text\"\n                        name=\"street\"\n                        placeholder=\"Street\"\n                    />\n                    <Input\n                        inputtype=\"input\"\n                        type=\"text\"\n                        name=\"postal\"\n                        placeholder=\"Postal\"\n                    />\n                    <Button btnType=\"Success\" clicked={this.orderHandler}>\n                        ORDER\n                    </Button>\n                </form>\n            </div>\n        );\n\n        if (this.state.ordered) {\n            ordered = <Spinner />;\n        }\n\n        return <div className={classes.ContactData}>{ordered}</div>;\n    }\n}\n\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}