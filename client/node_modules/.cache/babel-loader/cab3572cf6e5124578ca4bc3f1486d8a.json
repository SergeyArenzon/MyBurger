{"ast":null,"code":"import _defineProperty from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n  onion: 0.2\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var addIngredients = function addIngredients(state, action) {\n    var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n    var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    var updatedState = {\n      ingredients: updatedIngredients,\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    };\n    return updateObject(state, updatedState);\n  };\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS: // return addIngredients(state, action);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      var updatedIngredient2 = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n      var updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\n      var updatedState2 = {\n        ingredients: updatedIngredients2,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState2);\n\n    case actionTypes.SET_INGREDIENTS:\n      var updatedState3 = updateObject(state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 0\n      });\n      return updatedState3;\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      var updatedState4 = updateObject(state, {\n        error: true\n      });\n      return updatedState4;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","onion","reducer","state","action","addIngredients","updatedIngredient","ingredientName","updatedIngredients","updatedState","type","ADD_INGREDIENTS","REMOVE_INGREDIENTS","updatedIngredient2","updatedIngredients2","updatedState2","SET_INGREDIENTS","updatedState3","FETCH_INGREDIENTS_FAILED","updatedState4"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE,GAJe;AAKtBC,EAAAA,KAAK,EAAE;AALe,CAA1B;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAG9C,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACtC,QAAME,iBAAiB,uBAClBF,MAAM,CAACG,cADW,EAEfJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C,CAF5B,CAAvB;;AAIA,QAAMC,kBAAkB,GAAGjB,YAAY,CACnCY,KAAK,CAACV,WAD6B,EAEnCa,iBAFmC,CAAvC;AAIA,QAAMG,YAAY,GAAG;AACjBhB,MAAAA,WAAW,EAAEe,kBADI;AAEjBd,MAAAA,UAAU,EACNS,KAAK,CAACT,UAAN,GAAmBE,iBAAiB,CAACQ,MAAM,CAACG,cAAR;AAHvB,KAArB;AAKA,WAAOhB,YAAY,CAACY,KAAD,EAAQM,YAAR,CAAnB;AACH,GAfD;;AAkBA,UAAQL,MAAM,CAACM,IAAf;AACI,SAAKpB,WAAW,CAACqB,eAAjB,CADJ,CAEQ;;AAGJ,SAAKrB,WAAW,CAACsB,kBAAjB;AACI,UAAMC,kBAAkB,uBACnBT,MAAM,CAACG,cADY,EAEhBJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C,CAF3B,CAAxB;;AAIA,UAAMO,mBAAmB,GAAGvB,YAAY,CACpCY,KAAK,CAACV,WAD8B,EAEpCoB,kBAFoC,CAAxC;AAIA,UAAME,aAAa,GAAG;AAClBtB,QAAAA,WAAW,EAAEqB,mBADK;AAElBpB,QAAAA,UAAU,EACNS,KAAK,CAACT,UAAN,GAAmBE,iBAAiB,CAACQ,MAAM,CAACG,cAAR;AAHtB,OAAtB;AAKA,aAAOhB,YAAY,CAACY,KAAD,EAAQY,aAAR,CAAnB;;AAEJ,SAAKzB,WAAW,CAAC0B,eAAjB;AACI,UAAMC,aAAa,GAAG1B,YAAY,CAACY,KAAD,EAAQ;AACtCV,QAAAA,WAAW,EAAEW,MAAM,CAACX,WADkB;AAEtCE,QAAAA,KAAK,EAAE,KAF+B;AAGtCD,QAAAA,UAAU,EAAE;AAH0B,OAAR,CAAlC;AAKA,aAAOuB,aAAP;;AAEJ,SAAK3B,WAAW,CAAC4B,wBAAjB;AACI,UAAMC,aAAa,GAAG5B,YAAY,CAACY,KAAD,EAAQ;AAACR,QAAAA,KAAK,EAAE;AAAR,OAAR,CAAlC;AACA,aAAOwB,aAAP;;AACJ;AACI,aAAOhB,KAAP;AAjCR;AAmCH,CAxDD;;AA0DA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 0,\n    error: false,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n    onion: 0.2,\n};\n\nconst reducer = (state = initialState, action) => {\n\n\n    const addIngredients = (state, action) => {\n        const updatedIngredient = {\n            [action.ingredientName]:\n                state.ingredients[action.ingredientName] + 1,\n        };\n        const updatedIngredients = updateObject(\n            state.ingredients,\n            updatedIngredient\n        );\n        const updatedState = {\n            ingredients: updatedIngredients,\n            totalPrice:\n                state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        };\n        return updateObject(state, updatedState);\n    }\n\n\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            // return addIngredients(state, action);\n\n            \n        case actionTypes.REMOVE_INGREDIENTS:\n            const updatedIngredient2 = {\n                [action.ingredientName]:\n                    state.ingredients[action.ingredientName] - 1,\n            };\n            const updatedIngredients2 = updateObject(\n                state.ingredients,\n                updatedIngredient2\n            );\n            const updatedState2 = {\n                ingredients: updatedIngredients2,\n                totalPrice:\n                    state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n            };\n            return updateObject(state, updatedState2);\n\n        case actionTypes.SET_INGREDIENTS:\n            const updatedState3 = updateObject(state, {\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 0,\n            });\n            return updatedState3;\n           \n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            const updatedState4 = updateObject(state, {error: true});\n            return updatedState4;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}