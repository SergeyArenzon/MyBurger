{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess() {};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.types) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authStart","state","action","authSuccess","reducer","types","AUTH_START"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM,CAEzB,CAFD;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCH,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC9C,UAAQA,MAAM,CAACG,KAAf;AACI,SAAKZ,WAAW,CAACa,UAAjB;AACI,aAAQN,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAjB;;AAEJ;AACI,aAAOD,KAAP;AALR;AAOH,CARD;;AAUA,eAAeG,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = () => {\n    \n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.types) {\n        case actionTypes.AUTH_START:\n            return  authStart(state, action);\n                \n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}