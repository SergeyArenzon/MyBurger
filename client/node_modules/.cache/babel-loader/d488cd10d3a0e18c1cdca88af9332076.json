{"ast":null,"code":"import _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n  onion: 0.2\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n      var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      var updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      var updatedIngredient2 = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n      var updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\n      var updatedState2 = {\n        ingredients: updatedIngredients2,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState2);\n\n    case actionTypes.SET_INGREDIENTS:\n      var updatedState3 = updateObject(state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 0\n      });\n      return updatedState3;\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      var updatedState4 = updateObject(state, {\n        error: true\n      });\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","onion","reducer","state","action","type","ADD_INGREDIENTS","updatedIngredient","ingredientName","updatedIngredients","updatedState","REMOVE_INGREDIENTS","updatedIngredient2","updatedIngredients2","updatedState2","SET_INGREDIENTS","updatedState3","FETCH_INGREDIENTS_FAILED","updatedState4"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE,GAJe;AAKtBC,EAAAA,KAAK,EAAE;AALe,CAA1B;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,WAAW,CAACgB,eAAjB;AACI,UAAMC,iBAAiB,uBAClBH,MAAM,CAACI,cADW,EAEfL,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACI,cAAzB,IAA2C,CAF5B,CAAvB;;AAIA,UAAMC,kBAAkB,GAAGlB,YAAY,CACnCY,KAAK,CAACV,WAD6B,EAEnCc,iBAFmC,CAAvC;AAIA,UAAMG,YAAY,GAAG;AACjBjB,QAAAA,WAAW,EAAEgB,kBADI;AAEjBf,QAAAA,UAAU,EACNS,KAAK,CAACT,UAAN,GAAmBE,iBAAiB,CAACQ,MAAM,CAACI,cAAR;AAHvB,OAArB;AAKA,aAAOjB,YAAY,CAACY,KAAD,EAAQO,YAAR,CAAnB;;AAEJ,SAAKpB,WAAW,CAACqB,kBAAjB;AACI,UAAMC,kBAAkB,uBACnBR,MAAM,CAACI,cADY,EAEhBL,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACI,cAAzB,IAA2C,CAF3B,CAAxB;;AAIA,UAAMK,mBAAmB,GAAGtB,YAAY,CACpCY,KAAK,CAACV,WAD8B,EAEpCmB,kBAFoC,CAAxC;AAIA,UAAME,aAAa,GAAG;AAClBrB,QAAAA,WAAW,EAAEoB,mBADK;AAElBnB,QAAAA,UAAU,EACNS,KAAK,CAACT,UAAN,GAAmBE,iBAAiB,CAACQ,MAAM,CAACI,cAAR;AAHtB,OAAtB;AAKA,aAAOjB,YAAY,CAACY,KAAD,EAAQW,aAAR,CAAnB;;AAEJ,SAAKxB,WAAW,CAACyB,eAAjB;AACI,UAAMC,aAAa,GAAGzB,YAAY,CAACY,KAAD,EAAQ;AACtCV,QAAAA,WAAW,EAAEW,MAAM,CAACX,WADkB;AAEtCE,QAAAA,KAAK,EAAE,KAF+B;AAGtCD,QAAAA,UAAU,EAAE;AAH0B,OAAR,CAAlC;AAKA,aAAOsB,aAAP;;AAEJ,SAAK1B,WAAW,CAAC2B,wBAAjB;AACI,UAAMC,aAAa,GAAG3B,YAAY,CAACY,KAAD,EAAQ;AAACR,QAAAA,KAAK,EAAE;AAAR,OAAR,CAAlC;AACA,+BACOQ,KADP;AAEIR,QAAAA,KAAK,EAAE;AAFX;;AAIJ;AACI,aAAOQ,KAAP;AAhDR;AAkDH,CAnDD;;AAqDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 0,\n    error: false,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n    onion: 0.2,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            const updatedIngredient = {\n                [action.ingredientName]:\n                    state.ingredients[action.ingredientName] + 1,\n            };\n            const updatedIngredients = updateObject(\n                state.ingredients,\n                updatedIngredient\n            );\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice:\n                    state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n            };\n            return updateObject(state, updatedState);\n\n        case actionTypes.REMOVE_INGREDIENTS:\n            const updatedIngredient2 = {\n                [action.ingredientName]:\n                    state.ingredients[action.ingredientName] - 1,\n            };\n            const updatedIngredients2 = updateObject(\n                state.ingredients,\n                updatedIngredient2\n            );\n            const updatedState2 = {\n                ingredients: updatedIngredients2,\n                totalPrice:\n                    state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n            };\n            return updateObject(state, updatedState2);\n\n        case actionTypes.SET_INGREDIENTS:\n            const updatedState3 = updateObject(state, {\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 0,\n            });\n            return updatedState3;\n           \n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            const updatedState4 = updateObject(state, {error: true});\n            return {\n                ...state,\n                error: true,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}