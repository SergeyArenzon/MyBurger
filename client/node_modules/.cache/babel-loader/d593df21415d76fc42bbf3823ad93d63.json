{"ast":null,"code":"import _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger'; // import BurgerIngredient from '../../components/Burger/BurgerIngredient/BurgerIngredient';\n\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from 'axios';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { Link, Route } from 'react-router-dom';\nimport Checkout from '../Checkout/Checkout';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n  onion: 0.2\n};\n\nvar BurgerBuilder = /*#__PURE__*/function (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: null,\n      totalPrice: 0,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    _this.updatePurchasable = function (ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n\n      _this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updateCount = oldCount + 1;\n\n      var updatedIngredient = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredient[type] = updateCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n\n      _this.updatePurchasable(updatedIngredient);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount > 0) {\n        var updateCount = oldCount - 1;\n\n        var updatedIngredient = _objectSpread({}, _this.state.ingredients);\n\n        updatedIngredient[type] = updateCount;\n        var priceAddition = INGREDIENT_PRICES[type];\n        var oldPrice = _this.state.totalPrice;\n        var newPrice = oldPrice - priceAddition;\n\n        if (newPrice < 0) {\n          newPrice = 0;\n        }\n\n        _this.setState({\n          totalPrice: newPrice,\n          ingredients: updatedIngredient\n        });\n\n        _this.updatePurchasable(updatedIngredient);\n      }\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancleHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      _this.setState({\n        loading: true\n      }); // \n      //   push new order \n      //\n      // const order = {\n      //     ingredients : this.state.ingredients,\n      //     price: this.state.totalPrice,\n      //     address: {\n      //         street: 'teststreet',\n      //         zipCode: '123'\n      //     },\n      //     email: 'test22@gmail.com'\n      // }\n      // axios.post('http://localhost:5000/orders/add', order)\n      //     .then(response => {\n      //         this.setState({loading: false, purchasing: false});\n      //         console.log(response.data)\n      //     })\n      //     .catch(error => {\n      //         this.setState({loading: false, purchasing: false});\n      //         console.log(error)\n      //     })\n\n\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {}\n\n      _this.props.history.push(\"/checkout\");\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/ingredients').then(function (response) {\n        // handle success\n        var currentIngredients = response.data;\n\n        _this2.setState({\n          ingredients: currentIngredients\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 22\n        }\n      });\n\n      if (this.state.ingredients !== null) {\n        burger = /*#__PURE__*/React.createElement(Aux, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Burger, {\n          ingredients: this.state.ingredients,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }));\n        orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n          ingredients: this.state.ingredients,\n          purchaseCanceled: this.purchaseCancleHandler,\n          purchaseContinued: this.purchaseContinueHandler,\n          price: this.state.totalPrice.toFixed(2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 28\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancleHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","Link","Route","Checkout","INGREDIENT_PRICES","salad","cheese","meat","bacon","onion","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","updatePurchasable","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updateCount","updatedIngredient","priceAddition","oldPrice","newPrice","removeIngredientHandler","purchaseHandler","purchaseCancleHandler","purchaseContinueHandler","queryParams","i","props","history","push","get","then","response","currentIngredients","data","catch","error","console","log","disabledInfo","key","orderSummary","burger","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\n// import BurgerIngredient from '../../components/Burger/BurgerIngredient/BurgerIngredient';\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from 'axios';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { Link, Route } from 'react-router-dom';\nimport Checkout from '../Checkout/Checkout';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n    onion: 0.2\n}\n\nclass BurgerBuilder extends Component {\n    \n    state = {\n        ingredients: null,\n        totalPrice: 0,\n        purchasable: false,\n        purchasing: false,\n        loading: false\n    }\n\n    componentDidMount () {\n        axios.get('http://localhost:5000/ingredients')\n            .then((response) => {\n                // handle success\n                let currentIngredients = response.data;\n                this.setState({ingredients: currentIngredients});\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n\n    updatePurchasable = ( ingredients ) => {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey] \n            })  \n                .reduce((sum, el) => {\n                    return sum + el;\n                }, 0);       \n        this.setState({purchasable: sum > 0});\n    }\n\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updatedIngredient = {\n            ...this.state.ingredients\n        }\n        updatedIngredient[type] = updateCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n        this.updatePurchasable(updatedIngredient);\n        \n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount > 0) {\n            const updateCount = oldCount - 1;\n            const updatedIngredient = {\n                ...this.state.ingredients\n            }\n            updatedIngredient[type] = updateCount;\n            const priceAddition = INGREDIENT_PRICES[type];\n            const oldPrice = this.state.totalPrice;\n            let newPrice = oldPrice - priceAddition;\n            if(newPrice < 0) {\n                newPrice = 0;\n            }\n            this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n            this.updatePurchasable(updatedIngredient); \n        }\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancleHandler = () => {\n        this.setState({purchasing: false})\n    }\n    purchaseContinueHandler = () => {\n        this.setState({loading: true});\n        \n        // \n        //   push new order \n        //\n        // const order = {\n        //     ingredients : this.state.ingredients,\n        //     price: this.state.totalPrice,\n        //     address: {\n        //         street: 'teststreet',\n        //         zipCode: '123'\n        //     },\n        //     email: 'test22@gmail.com'\n        // }\n        \n            \n        \n        // axios.post('http://localhost:5000/orders/add', order)\n        //     .then(response => {\n        //         this.setState({loading: false, purchasing: false});\n        //         console.log(response.data)\n        //     })\n        //     .catch(error => {\n        //         this.setState({loading: false, purchasing: false});\n        //         console.log(error)\n        //     })\n\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            \n        }\n        this.props.history.push(\"/checkout\");\n    }\n\n    \n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        let orderSummary = null;\n        let burger = <Spinner/>\n        if(this.state.ingredients !== null) {\n            burger = (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchaseHandler}\n                    loading={this.state.loading}>\n                </BuildControls>\n            </Aux>\n            );\n            orderSummary = \n                <OrderSummary \n                    ingredients={this.state.ingredients}\n                    purchaseCanceled={this.purchaseCancleHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                    price={this.state.totalPrice.toFixed(2)}>    \n                </OrderSummary>\n        }\n        if(this.state.loading) {\n            orderSummary = <Spinner/>\n        }\n\n        return (\n            <Aux>\n                <Modal \n                    show={this.state.purchasing}\n                    modalClosed={this.purchaseCancleHandler}>\n                        {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n            \n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}