{"ast":null,"code":"import _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var purchaseInit = function purchaseInit(state, action) {\n    updateObject(state, {\n      purchased: false\n    });\n  };\n\n  var purchaseBurgerStart = function purchaseBurgerStart(state, action) {\n    return purchaseInit(state, action);\n  };\n\n  var purchaseBurgerSuccess = function purchaseBurgerSuccess(state, action) {\n    var newOrder = _objectSpread({}, action.orderData, {\n      id: action.orderId\n    });\n\n    return updateObject(state, {\n      loading: false,\n      orders: state.orders.concat(newOrder),\n      purchased: true\n    });\n  };\n\n  var purchaseBurgerFail = function purchaseBurgerFail(state, action) {\n    return updateObject(state, {\n      loading: false\n    });\n  };\n\n  var fetchOrderStart = function fetchOrderStart(state, action) {\n    return updateObject(state, {\n      loading: true\n    });\n  };\n\n  var fetchOrderSuccess = function fetchOrderSuccess(state, action) {\n    return updateObject(state, {\n      orders: action.orders,\n      loading: false\n    });\n  };\n\n  var fetchOrderFail = function fetchOrderFail(state, action) {\n    return updateObject(state, {\n      loading: false\n    });\n  };\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrderStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrderSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrderFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","purchaseInit","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    const purchaseInit = (state, action) => {\n        updateObject(state, { purchased: false });\n    };\n\n    const purchaseBurgerStart = (state, action) => {\n        return purchaseInit(state, action);\n    };\n\n    const purchaseBurgerSuccess = (state, action) => {\n        const newOrder = {\n            ...action.orderData,\n            id: action.orderId,\n        };\n\n        return updateObject(state, {\n            loading: false,\n            orders: state.orders.concat(newOrder),\n            purchased: true,\n        });\n    };\n\n    const purchaseBurgerFail = (state, action) => {\n        return updateObject(state, { loading: false });\n    };\n\n    const fetchOrderStart = (state, action) => {\n        return updateObject(state, { loading: true });\n    };\n\n    const fetchOrderSuccess = (state, action) => {\n        return updateObject(state, {\n            orders: action.orders,\n            loading: false,\n        });\n    };\n\n    const fetchOrderFail = (state, action) => {\n        return updateObject(state, { loading: false });\n    };\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return purchaseInit(state, action);\n\n        case actionTypes.PURCHASE_BURGER_START:\n            return purchaseBurgerStart(state, action);\n\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            return purchaseBurgerSuccess(state, action);\n\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return purchaseBurgerFail(state, action);\n\n        case actionTypes.FETCH_ORDERS_START:\n            return fetchOrderStart(state, action);\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return fetchOrderSuccess(state, action);\n\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return fetchOrderFail(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}