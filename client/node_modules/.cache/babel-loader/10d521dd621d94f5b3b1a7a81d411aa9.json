{"ast":null,"code":"import _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\n\nvar ContactData = /*#__PURE__*/function (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      address: {\n        street: \"\",\n        postalCode: \"\"\n      },\n      ordered: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        ordered: true\n      });\n\n      var ingredients = _this.props.ingredients;\n      var price = _this.props.price;\n      var orderSchema = orderSchema; //   push new order\n\n      var order = {\n        ingredients: ingredients,\n        price: price,\n        name: _this.state.name,\n        email: _this.state.email,\n        address: {\n          street: _this.state.address.street,\n          zipCode: _this.state.address.postalCode\n        }\n      }; // alert(this.state.name)\n\n      axios.post(\"http://localhost:5000/orders/add\", order).then(function (response) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        _this.props.history.push(\"/\");\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ordered = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, \"Enter contact data\"), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Your Email\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"street\",\n        placeholder: \"Street\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              street: event.target.value,\n              postalCode: _this2.state.address.postalCode\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"postal\",\n        placeholder: \"Postal\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              postalCode: event.target.value,\n              street: _this2.state.address.street\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"ORDER\")));\n\n      if (this.state.ordered) {\n        ordered = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }\n      }, ordered);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","ContactData","state","name","email","address","street","postalCode","ordered","orderHandler","event","preventDefault","setState","ingredients","props","price","orderSchema","order","zipCode","post","then","response","loading","purchasing","history","push","catch","error","console","log","Input","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\n\nclass ContactData extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    address: {\n      street: \"\",\n      postalCode: \"\",\n    },\n    ordered: false,\n  };\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    this.setState({ ordered: true });\n\n    const ingredients = this.props.ingredients;\n    const price = this.props.price;\n\n    const orderSchema = orderSchema;\n    //   push new order\n\n    const order = {\n      ingredients: ingredients,\n      price: price,\n      name: this.state.name,\n      email: this.state.email,\n      address: {\n        street: this.state.address.street,\n        zipCode: this.state.address.postalCode,\n      },\n    };\n\n    // alert(this.state.name)\n\n    axios\n      .post(\"http://localhost:5000/orders/add\", order)\n      .then((response) => {\n        this.setState({ loading: false, purchasing: false });\n        this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        this.setState({ loading: false, purchasing: false });\n        console.log(error);\n      });\n  };\n\n  render() {\n    let ordered = (\n      <div>\n        <h4>Enter contact data</h4>\n        <form>\n          <input\n            className={classes.Input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            onChange={(event) => this.setState({ name: event.target.value })}\n          />\n          <input\n            className={classes.Input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            onChange={(event) => this.setState({ email: event.target.value })}\n          />\n          <input\n            className={classes.Input}\n            type=\"text\"\n            name=\"street\"\n            placeholder=\"Street\"\n            onChange={(event) =>\n              this.setState({\n                address: {\n                  street: event.target.value,\n                  postalCode: this.state.address.postalCode,\n                },\n              })\n            }\n          />\n          <input\n            className={classes.Input}\n            type=\"text\"\n            name=\"postal\"\n            placeholder=\"Postal\"\n            onChange={(event) =>\n              this.setState({\n                address: {\n                  postalCode: event.target.value,\n                  street: this.state.address.street,\n                },\n              })\n            }\n          />\n          <Button btnType=\"Success\" clicked={this.orderHandler}>\n            ORDER\n          </Button>\n        </form>\n      </div>\n    );\n\n    if (this.state.ordered) {\n      ordered = <Spinner />;\n    }\n\n    return (\n      <div className={classes.ContactData}>\n        {/* <h4>Enter contact data</h4>\n                <form>\n                    <input className={classes.Input} type=\"text\" name=\"name\" placeholder=\"Your Name\" onChange={(event) => this.setState({name: event.target.value})} />\n                    <input className={classes.Input} type=\"email\" name=\"email\" placeholder=\"Your Email\" onChange={(event) => this.setState({email: event.target.value})}/>\n                    <input className={classes.Input} type=\"text\" name=\"street\" placeholder=\"Street\" onChange={(event) => this.setState({address: {street: event.target.value}})}/>\n                    <input className={classes.Input} type=\"text\" name=\"postal\" placeholder=\"Postal\" onChange={(event) => this.setState({address: {postalCode: event.target.value}})}/>\n                    <Button \n                    btnType=\"Success\"\n                    clicked={this.orderHandler}>\n                        ORDER\n                    </Button>\n                </form> */}\n\n        {ordered}\n      </div>\n    );\n  }\n}\n\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}