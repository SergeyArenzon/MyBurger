{"ast":null,"code":"import _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\"; // import BurgerIngredient from '../../components/Burger/BurgerIngredient/BurgerIngredient';\n\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"axios\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as actiontypes from \"../../store/actions\";\n\nvar BurgerBuilder = /*#__PURE__*/function (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancleHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      var queryString = queryParams.join(\"&\");\n\n      _this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString + \"&price=\" + _this.props.price.toFixed(2)\n      });\n    };\n\n    _this.checkPurchasableHandler = function (price) {\n      return price.toFixed(2) > 0;\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// axios\n      //   .get(\"http://localhost:5000/ingredients\")\n      //   .then((response) => {\n      //     // handle success\n      //     let currentIngredients = response.data;\n      //     this.setState({ ingredients: currentIngredients });\n      //   })\n      //   .catch(function (error) {\n      //     // handle error\n      //     console.log(error);\n      //   });\n    } // updatePurchasable = (ingredients) => {\n    //     const sum = Object.keys(ingredients)\n    //         .map((igKey) => {\n    //             return ingredients[igKey];\n    //         })\n    //         .reduce((sum, el) => {\n    //             return sum + el;\n    //         }, 0);\n    //     return sum > 0 ;\n    // };\n    // addIngredientHandler = (type) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     const updateCount = oldCount + 1;\n    //     const updatedIngredient = {\n    //         ...this.state.ingredients,\n    //     };\n    //     updatedIngredient[type] = updateCount;\n    //     const priceAddition = INGREDIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice + priceAddition;\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredient });\n    //     this.updatePurchasable(updatedIngredient);\n    // };\n    // removeIngredientHandler = (type) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     if (oldCount > 0) {\n    //         const updateCount = oldCount - 1;\n    //         const updatedIngredient = {\n    //             ...this.state.ingredients,\n    //         };\n    //         updatedIngredient[type] = updateCount;\n    //         const priceAddition = INGREDIENT_PRICES[type];\n    //         const oldPrice = this.state.totalPrice;\n    //         let newPrice = oldPrice - priceAddition;\n    //         if (newPrice < 0) {\n    //             newPrice = 0;\n    //         }\n    //         this.setState({\n    //             totalPrice: newPrice,\n    //             ingredients: updatedIngredient,\n    //         });\n    //         this.updatePurchasable(updatedIngredient);\n    //     }\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 18\n        }\n      });\n\n      if (this.props.ings !== null) {\n        burger = /*#__PURE__*/React.createElement(Aux, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          price: this.props.price,\n          purchasable: this.props.price.toFixed(2) > 0 ? true : false,\n          ordered: this.purchaseHandler,\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }\n        }));\n        orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          purchaseCanceled: this.purchaseCancleHandler,\n          purchaseContinued: this.purchaseContinueHandler,\n          price: this.props.price.toFixed(2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancleHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actiontypes.ADD_INGREDIENTS,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actiontypes.REMOVE_INGREDIENTS,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapToStateProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actiontypes","BurgerBuilder","state","purchasable","purchasing","loading","purchaseHandler","setState","purchaseCancleHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","queryString","join","props","history","pathname","search","price","toFixed","checkPurchasableHandler","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapToStateProps","totalPrice","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\n// import BurgerIngredient from '../../components/Burger/BurgerIngredient/BurgerIngredient';\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"axios\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as actiontypes from \"../../store/actions\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasable: false,\n    purchasing: false,\n    loading: false,\n  };\n\n  componentDidMount() {\n    // axios\n    //   .get(\"http://localhost:5000/ingredients\")\n    //   .then((response) => {\n    //     // handle success\n    //     let currentIngredients = response.data;\n    //     this.setState({ ingredients: currentIngredients });\n    //   })\n    //   .catch(function (error) {\n    //     // handle error\n    //     console.log(error);\n    //   });\n  }\n\n  // updatePurchasable = (ingredients) => {\n  //     const sum = Object.keys(ingredients)\n  //         .map((igKey) => {\n  //             return ingredients[igKey];\n  //         })\n  //         .reduce((sum, el) => {\n  //             return sum + el;\n  //         }, 0);\n  //     return sum > 0 ;\n  // };\n\n  // addIngredientHandler = (type) => {\n  //     const oldCount = this.state.ingredients[type];\n  //     const updateCount = oldCount + 1;\n  //     const updatedIngredient = {\n  //         ...this.state.ingredients,\n  //     };\n  //     updatedIngredient[type] = updateCount;\n  //     const priceAddition = INGREDIENT_PRICES[type];\n  //     const oldPrice = this.state.totalPrice;\n  //     const newPrice = oldPrice + priceAddition;\n  //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredient });\n  //     this.updatePurchasable(updatedIngredient);\n  // };\n\n  // removeIngredientHandler = (type) => {\n  //     const oldCount = this.state.ingredients[type];\n  //     if (oldCount > 0) {\n  //         const updateCount = oldCount - 1;\n  //         const updatedIngredient = {\n  //             ...this.state.ingredients,\n  //         };\n  //         updatedIngredient[type] = updateCount;\n  //         const priceAddition = INGREDIENT_PRICES[type];\n  //         const oldPrice = this.state.totalPrice;\n  //         let newPrice = oldPrice - priceAddition;\n  //         if (newPrice < 0) {\n  //             newPrice = 0;\n  //         }\n  //         this.setState({\n  //             totalPrice: newPrice,\n  //             ingredients: updatedIngredient,\n  //         });\n  //         this.updatePurchasable(updatedIngredient);\n  //     }\n  // };\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancleHandler = () => {\n    this.setState({ purchasing: false });\n  };\n  purchaseContinueHandler = () => {\n    this.setState({ loading: true });\n\n    const queryParams = [];\n    for (let i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    const queryString = queryParams.join(\"&\");\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryString + \"&price=\" + this.props.price.toFixed(2),\n    });\n  };\n\n  checkPurchasableHandler = (price) => {\n    return price.toFixed(2) > 0;\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n        \n    let orderSummary = null;\n    let burger = <Spinner />;\n    if (this.props.ings !== null) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.price}\n            purchasable={this.props.price.toFixed(2) > 0 ? true : false}\n            ordered={this.purchaseHandler}\n            loading={this.state.loading}\n          ></BuildControls>\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCanceled={this.purchaseCancleHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n          price={this.props.price.toFixed(2)}\n        ></OrderSummary>\n      );\n    }\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancleHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapToStateProps = (state) => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) =>\n      dispatch({\n        type: actiontypes.ADD_INGREDIENTS,\n        ingredientName: ingName,\n      }),\n    onIngredientRemoved: (ingName) =>\n      dispatch({\n        type: actiontypes.REMOVE_INGREDIENTS,\n        ingredientName: ingName,\n      }),\n  };\n};\n\nexport default connect(\n  mapToStateProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}