{"ast":null,"code":"import _slicedToArray from \"/home/sergey/Dev/MyBurger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sergey/Dev/MyBurger/client/src/components/Order/Order.js\";\n\nimport React, { useState } from \"react\";\nimport classes from \"./Order.module.css\";\n\nvar order = function order(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fold = _useState2[0],\n      setFold = _useState2[1];\n\n  var ingredients = [];\n\n  for (var ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  var ingredientOutput = ingredients.map(function (ig) {\n    if (ig.amount > 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: ig.name,\n        style: {\n          textTransform: \"capitalize\",\n          display: \"inline\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, ig.name, \" (\", ig.amount, \")\");\n    }\n\n    return null;\n  });\n\n  var foldHandler = function foldHandler() {\n    setFold(!fold);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: [classes.Order, fold ? classes.Def : null].join(\" \"),\n    onClick: foldHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Ordered Name: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CreatedAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Date: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, props.createdAt)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Expand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Price:\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, props.price)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Ings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Ingredients: \", /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 34\n    }\n  }, ingredientOutput))));\n};\n\nexport default order;","map":{"version":3,"sources":["/home/sergey/Dev/MyBurger/client/src/components/Order/Order.js"],"names":["React","useState","classes","order","props","fold","setFold","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","textTransform","display","margin","border","padding","foldHandler","Order","Def","join","Name","CreatedAt","createdAt","Expand","Price","price","Ings"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,kBACGH,QAAQ,CAAC,KAAD,CADX;AAAA;AAAA,MACdI,IADc;AAAA,MACRC,OADQ;;AAGrB,MAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,cAAT,IAA2BJ,KAAK,CAACG,WAAjC,EAA8C;AAC1CA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,MAAAA,IAAI,EAAEF,cADO;AAEbG,MAAAA,MAAM,EAAEP,KAAK,CAACG,WAAN,CAAkBC,cAAlB;AAFK,KAAjB;AAIH;;AAED,MAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgB,UAACC,EAAD,EAAQ;AAC7C,QAAIA,EAAE,CAACH,MAAH,GAAY,CAAhB,EAAmB;AACf,0BACI;AACI,QAAA,GAAG,EAAEG,EAAE,CAACJ,IADZ;AAEI,QAAA,KAAK,EAAE;AACHK,UAAAA,aAAa,EAAE,YADZ;AAEHC,UAAAA,OAAO,EAAE,QAFN;AAGHC,UAAAA,MAAM,EAAE,OAHL;AAIHC,UAAAA,MAAM,EAAE,gBAJL;AAKHC,UAAAA,OAAO,EAAE;AALN,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKL,EAAE,CAACJ,IAVR,QAUgBI,EAAE,CAACH,MAVnB,MADJ;AAcH;;AACD,WAAO,IAAP;AACH,GAlBwB,CAAzB;;AAoBA,MAAMS,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBd,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD;;AAIA,sBACI;AACI,IAAA,SAAS,EAAE,CAACH,OAAO,CAACmB,KAAT,EAAgBhB,IAAI,GAAGH,OAAO,CAACoB,GAAX,GAAiB,IAArC,EAA2CC,IAA3C,CAAgD,GAAhD,CADf;AAEI,IAAA,OAAO,EAAEH,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACsB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASpB,KAAK,CAACM,IAAf,CADlB,CAJJ,eAQI;AAAK,IAAA,SAAS,EAAER,OAAO,CAACuB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASrB,KAAK,CAACsB,SAAf,CADV,CARJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI;AAAK,IAAA,SAAS,EAAExB,OAAO,CAACyB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASxB,KAAK,CAACyB,KAAf,CAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAAC4B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlB,gBAAN,CADjB,CALJ,CAZJ,CADJ;AAwBH,CA3DD;;AA6DA,eAAeT,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = (props) => {\n    const [fold, setFold] = useState(false);\n\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName],\n        });\n    }\n\n    const ingredientOutput = ingredients.map((ig) => {\n        if (ig.amount > 0) {\n            return (\n                <span\n                    key={ig.name}\n                    style={{\n                        textTransform: \"capitalize\",\n                        display: \"inline\",\n                        margin: \"0 8px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"5px\",\n                    }}\n                >\n                    {ig.name} ({ig.amount})\n                </span>\n            );\n        }\n        return null;\n    });\n\n    const foldHandler = () => {\n        setFold(!fold);\n    };\n\n    return (\n        <div\n            className={[classes.Order, fold ? classes.Def : null].join(\" \")}\n            onClick={foldHandler}\n        >\n            <div className={classes.Name}>\n                Ordered Name: <strong>{props.name}</strong>\n            </div>\n\n            <div className={classes.CreatedAt}>\n                Date: <strong>{props.createdAt}</strong>\n            </div>\n            <br />\n            <div className={classes.Expand}>\n                <div className={classes.Price}>\n                    Price:\n                    <strong>{props.price}</strong>\n                </div>\n                <div className={classes.Ings}>\n                    Ingredients: <div>{ingredientOutput}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default order;\n"]},"metadata":{},"sourceType":"module"}