{"ast":null,"code":"// import * as actionTypes from \"./actionTypes\";\n// import axios from \"axios\";\n// export const authStart = () => {\n//     return {\n//         type: actionTypes.AUTH_START,\n//     };\n// };\n// export const authSuccess = (idToken, userId) => {\n//     return {\n//         type: actionTypes.AUTH_SUCCESS,\n//         token: idToken,\n//         userId: userId,\n//     };\n// };\n// export const authFail = (error) => {\n//     return {\n//         type: actionTypes.AUTH_FAIL,\n//         error: error,\n//     };\n// };\n// export const logout = () => {\n//     return {\n//         type: actionTypes.AUTH_LOGOUT,\n//     };\n// };\n// export const checkAuthTimeout = (expirationTime) => {\n//     return (dispatch) => {\n//         setTimeout(() => {\n//             dispatch(logout());\n//         }, expirationTime * 1000);\n//     };\n// };\n// export const auth = (email, password, isSignup) => {\n//     return (dispatch) => {\n//         dispatch(authStart());\n//         const authData = {\n//             email: email,\n//             password: password,\n//             returnSecureToken: true,\n//         };\n//         let url =\n//             \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n//         if (!isSignup) {\n//             url =\n//                 \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n//         }\n//         axios\n//             .post(url, authData)\n//             .then((response) => {\n//                 console.log(response);\n//                 dispatch(\n//                     authSuccess(response.data.idToken, response.data.localId)\n//                 );\n//                 dispatch(checkAuthTimeout(response.data.expiresIn));\n//             })\n//             .catch((err) => {\n//                 console.log(err.response);\n//                 dispatch(authFail(err.response));\n//             });\n//     };\n// };\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\"; // Check token & load user\n\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    // User loading\n    dispatch({\n      type: actionTypes.USER_LOADING\n    });\n    axios.get('www://');\n  };\n};","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/actions/auth.js"],"names":["actionTypes","axios","loadUser","dispatch","getState","type","USER_LOADING","get"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClD;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEL,WAAW,CAACM;AAAnB,KAAD,CAAR;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,QAAV;AACH,GAJuB;AAAA,CAAjB","sourcesContent":["// import * as actionTypes from \"./actionTypes\";\n// import axios from \"axios\";\n\n// export const authStart = () => {\n//     return {\n//         type: actionTypes.AUTH_START,\n//     };\n// };\n\n// export const authSuccess = (idToken, userId) => {\n//     return {\n//         type: actionTypes.AUTH_SUCCESS,\n//         token: idToken,\n//         userId: userId,\n//     };\n// };\n\n// export const authFail = (error) => {\n//     return {\n//         type: actionTypes.AUTH_FAIL,\n//         error: error,\n//     };\n// };\n\n// export const logout = () => {\n//     return {\n//         type: actionTypes.AUTH_LOGOUT,\n//     };\n// };\n\n// export const checkAuthTimeout = (expirationTime) => {\n//     return (dispatch) => {\n//         setTimeout(() => {\n//             dispatch(logout());\n//         }, expirationTime * 1000);\n//     };\n// };\n\n// export const auth = (email, password, isSignup) => {\n//     return (dispatch) => {\n//         dispatch(authStart());\n//         const authData = {\n//             email: email,\n//             password: password,\n//             returnSecureToken: true,\n//         };\n//         let url =\n//             \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n//         if (!isSignup) {\n//             url =\n//                 \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n//         }\n//         axios\n//             .post(url, authData)\n//             .then((response) => {\n//                 console.log(response);\n//                 dispatch(\n//                     authSuccess(response.data.idToken, response.data.localId)\n//                 );\n//                 dispatch(checkAuthTimeout(response.data.expiresIn));\n//             })\n//             .catch((err) => {\n//                 console.log(err.response);\n//                 dispatch(authFail(err.response));\n//             });\n//     };\n// };\n\n\n\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n    // User loading\n    dispatch({type: actionTypes.USER_LOADING})\n    axios.get('www://')\n}"]},"metadata":{},"sourceType":"module"}