{"ast":null,"code":"import _defineProperty from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Auth.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Auth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Mail Address\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    _this.checkVaildity = function (value, rules) {\n      var isValid = true;\n\n      if (rules.required) {\n        isValid = value.trim() !== \"\" && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      return isValid;\n    };\n\n    _this.inputChangedHandler = function (event, controlName) {\n      var updatedControls = _objectSpread({}, _this.state.controls, _defineProperty({}, controlName, _objectSpread({}, _this.state.controls[controlName], {\n        value: event.target.value,\n        valid: _this.checkVaildity(event.target.value, _this.state.controls[controlName].validation),\n        touched: true\n      }))); // console.log(this.state.controls.password)\n\n\n      _this.setState({\n        controls: updatedControls\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      _this.props.onAuth(_this.state.controls.email.value, _this.state.controls.email.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, form, /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"SUBMIT\")));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    validAuth: state.validAuth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(email, password) {\n      return dispatch(actions.auth(email, password));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","connect","actions","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","checkVaildity","rules","isValid","trim","length","maxLength","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","formElementsArray","key","push","id","config","form","map","formElement","mapStateToProps","validAuth","mapDispatchToProps","dispatch","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Auth.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"Mail Address\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    isEmail: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    minLength: 6,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n    };\n\n    checkVaildity = (value, rules) => {\n        let isValid = true;\n        if (rules.required) {\n            isValid = value.trim() !== \"\" && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    };\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkVaildity(\n                    event.target.value,\n                    this.state.controls[controlName].validation\n                ),\n                touched: true,\n            },\n        };\n        // console.log(this.state.controls.password)\n        this.setState({ controls: updatedControls });\n    };\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.email.value)\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key],\n            });\n        }\n\n        const form = formElementsArray.map((formElement) => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) =>\n                    this.inputChangedHandler(event, formElement.id)\n                }\n            />\n        ));\n\n        return (\n            <div className={classes.Auth}>\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType={\"Success\"}>SUBMIT</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        validAuth: state.validAuth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuth: (email, password) => dispatch(actions.auth(email, password)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}