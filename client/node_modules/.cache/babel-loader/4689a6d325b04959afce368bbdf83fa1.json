{"ast":null,"code":"import _defineProperty from \"/home/sergey/Dev/MyBurger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n  onion: 0.2,\n  cucumber: 0.2,\n  lettuce: 0.2\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var addIngredients = function addIngredients(state, action) {\n    var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n    var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    var updatedState = {\n      ingredients: updatedIngredients,\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    };\n    return updateObject(state, updatedState);\n  };\n\n  var removeIngredient = function removeIngredient(state, action) {\n    var updatedIngredient2 = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n    var updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\n    var updatedState2 = {\n      ingredients: updatedIngredients2,\n      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n    };\n    return updateObject(state, updatedState2);\n  };\n\n  var setIngredients = function setIngredients(state, action) {\n    var updatedState3 = updateObject(state, {\n      ingredients: action.ingredients,\n      error: false,\n      totalPrice: 0\n    });\n    return updatedState3;\n  };\n\n  var fetchIngredientsFailed = function fetchIngredientsFailed(state, action) {\n    var updatedState4 = updateObject(state, {\n      error: true\n    });\n    return updatedState4;\n  };\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return addIngredients(state, action);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/MyBurger/client/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","onion","cucumber","lettuce","reducer","state","action","addIngredients","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIngredient2","updatedIngredients2","updatedState2","setIngredients","updatedState3","fetchIngredientsFailed","updatedState4","type","ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 0,\n    error: false,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n    onion: 0.2,\n    cucumber: 0.2,\n    lettuce: 0.2,\n    \n};\n\nconst reducer = (state = initialState, action) => {\n    const addIngredients = (state, action) => {\n        const updatedIngredient = {\n            [action.ingredientName]:\n                state.ingredients[action.ingredientName] + 1,\n        };\n        const updatedIngredients = updateObject(\n            state.ingredients,\n            updatedIngredient\n        );\n        const updatedState = {\n            ingredients: updatedIngredients,\n            totalPrice:\n                state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        };\n        return updateObject(state, updatedState);\n    };\n\n    const removeIngredient = (state, action) => {\n        const updatedIngredient2 = {\n            [action.ingredientName]:\n                state.ingredients[action.ingredientName] - 1,\n        };\n        const updatedIngredients2 = updateObject(\n            state.ingredients,\n            updatedIngredient2\n        );\n        const updatedState2 = {\n            ingredients: updatedIngredients2,\n            totalPrice:\n                state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        };\n        return updateObject(state, updatedState2);\n    };\n\n    const setIngredients = (state, action) => {\n        const updatedState3 = updateObject(state, {\n            ingredients: action.ingredients,\n            error: false,\n            totalPrice: 0,\n        });\n        return updatedState3;\n    };\n\n    const fetchIngredientsFailed = (state, action) => {\n        const updatedState4 = updateObject(state, { error: true });\n        return updatedState4;\n    }\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            return addIngredients(state, action);\n\n        case actionTypes.REMOVE_INGREDIENTS:\n            return removeIngredient(state, action);\n\n        case actionTypes.SET_INGREDIENTS:\n            return setIngredients(state, action);\n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return fetchIngredientsFailed(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}