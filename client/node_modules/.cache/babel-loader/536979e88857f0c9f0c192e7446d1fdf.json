{"ast":null,"code":"import _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\"; // import * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport errorReducer from \"./store/reducers/error\";\nimport { loadUser } from \"./store/actions/auth\";\nvar rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer,\n  error: errorReducer\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk))); // const app = (\n//     <Provider store={store}>\n//         <BrowserRouter>\n//             <App />\n//         </BrowserRouter>\n//     </Provider>\n// );\n\nvar RootApp = /*#__PURE__*/function (_Component) {\n  _inherits(RootApp, _Component);\n\n  function RootApp() {\n    _classCallCheck(this, RootApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RootApp).apply(this, arguments));\n  }\n\n  _createClass(RootApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      store.dispatch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return RootApp;\n}(Component);\n\nReactDOM.render( /*#__PURE__*/React.createElement(RootApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/index.js"],"names":["React","Component","ReactDOM","App","BrowserRouter","Provider","createStore","applyMiddleware","compose","combineReducers","burgerBuilderReducer","thunk","orderReducer","authReducer","errorReducer","loadUser","rootReducer","burgerBuilder","order","auth","error","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","RootApp","dispatch","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,aAAa,EAAEP,oBADiB;AAEhCQ,EAAAA,KAAK,EAAEN,YAFyB;AAGhCO,EAAAA,IAAI,EAAEN,WAH0B;AAIhCO,EAAAA,KAAK,EAAEN;AAJyB,CAAD,CAAnC;AAOA,IAAMO,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+Cf,OAAvE;AACA,IAAMgB,KAAK,GAAGlB,WAAW,CAACU,WAAD,EAAcK,eAAe,CAACd,eAAe,CAACI,KAAD,CAAhB,CAA7B,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIMc,O;;;;;;;;;;;wCACkB;AAChBD,MAAAA,KAAK,CAACE,QAAN;AACH;;;6BAEQ;AACL,0BACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EAbiBvB,S;;AAgBtBC,QAAQ,CAACyB,MAAT,eAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B,E,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport errorReducer from \"./store/reducers/error\";\nimport { loadUser } from \"./store/actions/auth\";\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer,\n    error: errorReducer,\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\n// const app = (\n//     <Provider store={store}>\n//         <BrowserRouter>\n//             <App />\n//         </BrowserRouter>\n//     </Provider>\n// );\n\n\n\nclass RootApp extends Component {\n    componentDidMount() {\n        store.dispatch()\n    }\n    \n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nReactDOM.render(<RootApp/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}