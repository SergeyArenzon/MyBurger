{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(idToken, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: idToken,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {};\n};\nexport var auth = function auth(email, password, isSignup) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n\n    if (!isSignup) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n    }\n\n    axios.post(url, authData).then(function (response) {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout);\n    }).catch(function (err) {\n      console.log(err.response);\n      dispatch(authFail(err.response));\n    });\n  };\n};","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","idToken","userId","AUTH_SUCCESS","token","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","data","localId","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADf;AAEHC,IAAAA,KAAK,EAAEH,OAFJ;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAChD,SAAO,UAAAC,QAAQ,EAAI,CAElB,CAFD;AAGH,CAJM;AAMP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA+B;AAC/C,SAAO,UAACJ,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACA,QAAMkB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GACH,uGADJ;;AAEA,QAAI,CAACH,QAAL,EAAe;AACXG,MAAAA,GAAG,GACC,mHADJ;AAEH;;AACDrB,IAAAA,KAAK,CACAsB,IADL,CACUD,GADV,EACeF,QADf,EAEKI,IAFL,CAEU,UAACC,QAAD,EAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAV,MAAAA,QAAQ,CACJV,WAAW,CAACoB,QAAQ,CAACG,IAAT,CAActB,OAAf,EAAwBmB,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CADP,CAAR;AAGAd,MAAAA,QAAQ,CAACF,gBAAD,CAAR;AACH,KARL,EASKiB,KATL,CASW,UAACC,GAAD,EAAS;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACN,QAAhB;AACAV,MAAAA,QAAQ,CAACL,QAAQ,CAACqB,GAAG,CAACN,QAAL,CAAT,CAAR;AACH,KAZL;AAaH,GA1BD;AA2BH,CA5BM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    };\n};\n\nexport const authSuccess = (idToken, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: idToken,\n        userId: userId,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return (dispatch) => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true,\n        };\n        let url =\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n        if (!isSignup) {\n            url =\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAFFfCTRipxD7F1H5c2T0TtG34d16RZbrQ\";\n        }\n        axios\n            .post(url, authData)\n            .then((response) => {\n                console.log(response);\n                dispatch(\n                    authSuccess(response.data.idToken, response.data.localId)\n                );\n                dispatch(checkAuthTimeout)\n            })\n            .catch((err) => {\n                console.log(err.response);\n                dispatch(authFail(err.response));\n            });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}