{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Dev/MyBurger/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\"; // import * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport errorReducer from \"./store/reducers/error\"; // import { loadUser } from \"./store/actions/auth\";\n\nconsole.log();\nvar rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer,\n  error: errorReducer\n});\nvar composeEnhancer = process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nvar store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nvar app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n})));\nReactDOM.render(app, document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/home/sergey/Dev/MyBurger/client/src/index.js"],"names":["React","ReactDOM","App","BrowserRouter","Provider","createStore","applyMiddleware","compose","combineReducers","burgerBuilderReducer","thunk","orderReducer","authReducer","errorReducer","console","log","rootReducer","burgerBuilder","order","auth","error","composeEnhancer","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB,C,CACA;;AAEAC,OAAO,CAACC,GAAR;AAEA,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,aAAa,EAAER,oBADiB;AAEhCS,EAAAA,KAAK,EAAEP,YAFyB;AAGhCQ,EAAAA,IAAI,EAAEP,WAH0B;AAIhCQ,EAAAA,KAAK,EAAEP;AAJyB,CAAD,CAAnC;AAOA,IAAMQ,eAAe,GACjBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACMC,MAAM,CAACC,oCADb,GAEM,QAAQnB,OAHlB;AAIA,IAAMoB,KAAK,GAAGtB,WAAW,CAACW,WAAD,EAAcK,eAAe,CAACf,eAAe,CAACI,KAAD,CAAhB,CAA7B,CAAzB;AAEA,IAAMkB,GAAG,gBACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAQA1B,QAAQ,CAAC4B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport errorReducer from \"./store/reducers/error\";\n// import { loadUser } from \"./store/actions/auth\";\n\nconsole.log()\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer,\n    error: errorReducer,\n});\n\nconst composeEnhancer =\n    process.env.NODE_ENV === \"development\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        : null || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App store={store} />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}