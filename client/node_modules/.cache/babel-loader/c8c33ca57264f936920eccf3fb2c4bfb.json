{"ast":null,"code":"import _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nvar ContactData = /*#__PURE__*/function (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\"\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\"\n        },\n        countery: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\"\n        },\n        deliveryMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            }, {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }],\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\"\n        }\n      },\n      loading: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        ordered: true\n      });\n\n      var ingredients = _this.props.ingredients;\n      var price = _this.props.price;\n      var orderSchema = orderSchema; //   push new order\n\n      var order = {\n        ingredients: ingredients,\n        price: price,\n        name: _this.state.name,\n        email: _this.state.email,\n        address: {\n          street: _this.state.address.street,\n          zipCode: _this.state.address.postalCode\n        }\n      }; // alert(this.state.name)\n\n      axios.post(\"http://localhost:5000/orders/add\", order).then(function (response) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        _this.props.history.push(\"/\");\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"[ContactData componentDidMount]\");\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"[ContactData componentDidUpdate]\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, formElementsArray.map(function (formElement) {\n        /*#__PURE__*/\n        React.createElement(Input, {\n          elementType: formElement.config.ele,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        });\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 16\n        }\n      }, form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","countery","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","ordered","ingredients","props","price","orderSchema","order","address","postalCode","post","then","response","purchasing","history","push","catch","error","console","log","formElementsArray","key","id","config","form","map","formElement","ele"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"axios\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Your Name\",\n                },\n                value: \"\",\n            },\n            street: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Street\",\n                },\n                value: \"\",\n            },\n            zipCode: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"ZIP Code\",\n                },\n                value: \"\",\n            },\n            countery: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Country\",\n                },\n                value: \"\",\n            },\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"Your Email\",\n                },\n                value: \"\",\n            },\n            deliveryMethod: {\n                elementType: \"select\",\n                elementConfig: {\n                    options: [\n                        { value: \"fastest\", displayValue: \"Fastest\" },\n                        { value: \"cheapest\", displayValue: \"Cheapest\" },\n                    ],\n                    placeholder: \"ZIP Code\",\n                },\n                value: \"\",\n            },\n        },\n        loading: false\n    };\n    componentDidMount() {\n        console.log(\"[ContactData componentDidMount]\");\n    }\n    componentDidUpdate() {\n        console.log(\"[ContactData componentDidUpdate]\");\n    }\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ ordered: true });\n\n        const ingredients = this.props.ingredients;\n        const price = this.props.price;\n\n        const orderSchema = orderSchema;\n        //   push new order\n\n        const order = {\n            ingredients: ingredients,\n            price: price,\n            name: this.state.name,\n            email: this.state.email,\n            address: {\n                street: this.state.address.street,\n                zipCode: this.state.address.postalCode,\n            },\n        };\n\n        // alert(this.state.name)\n\n        axios\n            .post(\"http://localhost:5000/orders/add\", order)\n            .then((response) => {\n                this.setState({ loading: false, purchasing: false });\n                this.props.history.push(\"/\");\n            })\n            .catch((error) => {\n                this.setState({ loading: false, purchasing: false });\n                console.log(error);\n            });\n    };\n\n    render() {\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n\n        let form = (\n            <form>\n                {formElementsArray.map(formElement => {\n                    <Input elementType={formElement.config.ele}/>\n                })}\n            </form>\n        );\n\n        \n\n        return <div className={classes.ContactData}>{form}</div>;\n    }\n}\n\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}