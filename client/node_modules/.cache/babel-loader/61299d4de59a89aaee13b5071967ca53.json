{"ast":null,"code":"import _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Orders/Orders.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nvar Orders = /*#__PURE__*/function (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orders: []\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // axios\n      //     .get(\"http://localhost:5000/orders\")\n      //     .then((res) => {\n      //         console.log(res);\n      //         this.setState({ orders: res.data });\n      //     })\n      //     .catch((err) => {\n      //         console.log(err);\n      //     });\n      this.props.onFetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var order = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      });\n\n      if (!this.props.loading) {\n        orders = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.Orders,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          className: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, this.props.orders.map(function (order) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: order._id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Order, {\n            ingredients: order.ingredients,\n            address: order.address,\n            name: order.name,\n            email: order.email,\n            price: order.price,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }\n          }));\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      }, orders);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders() {\n      return dispatch(actions.fetchOrders());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Orders/Orders.js"],"names":["axios","React","Component","Order","classes","connect","actions","Spinner","Orders","state","orders","props","onFetchOrders","order","loading","map","_id","ingredients","address","name","email","price","mapStateToProps","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IACMC,M;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;;;;;wCAIY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAKC,KAAL,CAAWC,aAAX;AACH;;;6BAEQ;AAAA;;AACL,UAAIC,KAAK,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;;AACA,UAAI,CAAC,KAAKF,KAAL,CAAWG,OAAhB,EAAyB;AACpBJ,QAAAA,MAAM,gBACH;AAAK,UAAA,SAAS,EAAEN,OAAO,CAACI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKG,KAAL,CAAWD,MAAX,CAAkBK,GAAlB,CAAsB,UAACF,KAAD,EAAW;AAC9B,8BACI;AAAI,YAAA,GAAG,EAAEA,KAAK,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,KAAD;AACI,YAAA,WAAW,EAAEH,KAAK,CAACI,WADvB;AAEI,YAAA,OAAO,EAAEJ,KAAK,CAACK,OAFnB;AAGI,YAAA,IAAI,EAAEL,KAAK,CAACM,IAHhB;AAII,YAAA,KAAK,EAAEN,KAAK,CAACO,KAJjB;AAKI,YAAA,KAAK,EAAEP,KAAK,CAACQ,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAWH,SAZA,CADL,CADJ,CADH;AAmBJ;;AAED,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMX,MAAN,CAAP;AACH;;;;EA5CgBR,S;;AA+CrB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACI,KAAN,CAAYH,MADjB;AAEHI,IAAAA,OAAO,EAAEL,KAAK,CAACI,KAAN,CAAYC;AAFlB,GAAP;AAIH,CALD;;AAOA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHZ,IAAAA,aAAa,EAAE;AAAA,aAAMY,QAAQ,CAAClB,OAAO,CAACmB,WAAR,EAAD,CAAd;AAAA;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,MAA7C,CAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from '../../components/UI/Spinner/Spinner';\nclass Orders extends Component {\n    state = {\n        orders: [],\n    };\n\n    componentDidMount() {\n        // axios\n        //     .get(\"http://localhost:5000/orders\")\n        //     .then((res) => {\n        //         console.log(res);\n        //         this.setState({ orders: res.data });\n        //     })\n        //     .catch((err) => {\n        //         console.log(err);\n        //     });\n\n        this.props.onFetchOrders();\n    }\n\n    render() {\n        let order = <Spinner />;\n        if (!this.props.loading) {\n             orders = (\n                <div className={classes.Orders}>\n                    <ul className>\n                        {this.props.orders.map((order) => {\n                            return (\n                                <li key={order._id}>\n                                    <Order\n                                        ingredients={order.ingredients}\n                                        address={order.address}\n                                        name={order.name}\n                                        email={order.email}\n                                        price={order.price}\n                                    />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            );\n        }\n\n        return <div>{orders}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n"]},"metadata":{},"sourceType":"module"}