{"ast":null,"code":"import _toConsumableArray from \"/home/sergey/Dev/MyBurger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sergey/Dev/MyBurger/client/src/components/Burger/Burger.js\";\n\nimport React, { useEffect } from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nvar burger = function burger(props) {\n  useEffect(function () {\n    var element = _this.element; // Things involving accessing DOM properties on element\n    // In the case of what this question actually asks:\n\n    var hasOverflowingChildren = element.offsetHeight < element.scrollHeight || element.offsetWidth < element.scrollWidth;\n    if (hasOverflowingChildren) alert();\n  }, []);\n  var transformedIngredients = Object.keys(props.ingredients).map(function (igKey) {\n    return _toConsumableArray(Array(props.ingredients[igKey])).map(function (_, i) {\n      return /*#__PURE__*/React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }\n      });\n    });\n  }).reduce(function (arr, el) {\n    return arr.concat(el);\n  }, []);\n  var addIngsText = /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.AddIngsText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, \"Add Ingredients\");\n  /* Fixes scrolling after too many ingredients added */\n\n  var Burger = classes.Burger;\n\n  if (transformedIngredients.length > 6) {\n    Burger = classes.BurgerScrolled;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Burger,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), transformedIngredients.length < 1 ? addIngsText : null, transformedIngredients, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/home/sergey/Dev/MyBurger/client/src/components/Burger/Burger.js"],"names":["React","useEffect","classes","BurgerIngredient","burger","props","element","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","alert","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","addIngsText","AddIngsText","Burger","length","BurgerScrolled"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAKxBJ,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMK,OAAO,GAAG,KAAI,CAACA,OAArB,CAFY,CAGZ;AACA;;AACA,QAAMC,sBAAsB,GAAGD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,YAA/B,IACAH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,WAD7D;AAG+B,QAAGJ,sBAAH,EAA2BK,KAAK;AAClE,GATQ,EASP,EATO,CAAT;AAaA,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,WAAlB,EAC1BC,GAD0B,CACtB,UAACC,KAAD,EAAW;AACd,WAAO,mBAAIC,KAAK,CAACd,KAAK,CAACW,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,UAACG,CAAD,EAAIC,CAAJ,EAAU;AACxD,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAA/B;AAAkC,QAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAL0B,EAM1BI,MAN0B,CAMnB,UAACC,GAAD,EAAMC,EAAN,EAAa;AACnB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GAR0B,EAQxB,EARwB,CAA7B;AASA,MAAME,WAAW,gBAAG;AAAI,IAAA,SAAS,EAAExB,OAAO,CAACyB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAApB;AAEA;;AACA,MAAIC,MAAM,GAAG1B,OAAO,CAAC0B,MAArB;;AACA,MAAIf,sBAAsB,CAACgB,MAAvB,GAAgC,CAApC,EAAuC;AACrCD,IAAAA,MAAM,GAAG1B,OAAO,CAAC4B,cAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGf,sBAAsB,CAACgB,MAAvB,GAAgC,CAAhC,GAAoCH,WAApC,GAAkD,IAFrD,EAGGb,sBAHH,eAIE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CA3CD;;AA6CA,eAAeT,MAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n\n\n\n\n  useEffect(() => {\n    \n      const element = this.element;\n      // Things involving accessing DOM properties on element\n      // In the case of what this question actually asks:\n      const hasOverflowingChildren = element.offsetHeight < element.scrollHeight ||\n                                     element.offsetWidth < element.scrollWidth;\n    \n                                     if(hasOverflowingChildren) alert();\n  },[])\n\n\n\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map((igKey) => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  const addIngsText = <h2 className={classes.AddIngsText}>Add Ingredients</h2>;\n\n  /* Fixes scrolling after too many ingredients added */\n  let Burger = classes.Burger;\n  if (transformedIngredients.length > 6) {\n    Burger = classes.BurgerScrolled;\n  }\n\n  return (\n    <div className={Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients.length < 1 ? addIngsText : null}\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default burger;\n\n"]},"metadata":{},"sourceType":"module"}