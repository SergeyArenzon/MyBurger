{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar CommandOperationV2 = require('./command_v2');\n\nvar serverType = require('../core/sdam/common').serverType;\n\nvar ServerType = require('../core/sdam/common').ServerType;\n\nvar MongoError = require('../core').MongoError;\n\nvar ReIndexOperation = /*#__PURE__*/function (_CommandOperationV) {\n  _inherits(ReIndexOperation, _CommandOperationV);\n\n  function ReIndexOperation(collection, options) {\n    var _this;\n\n    _classCallCheck(this, ReIndexOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReIndexOperation).call(this, collection, options));\n    _this.collectionName = collection.collectionName;\n    return _this;\n  }\n\n  _createClass(ReIndexOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      if (serverType(server) !== ServerType.Standalone) {\n        callback(new MongoError(\"reIndex can only be executed on standalone servers.\"));\n        return;\n      }\n\n      _get(_getPrototypeOf(ReIndexOperation.prototype), \"executeCommand\", this).call(this, server, {\n        reIndex: this.collectionName\n      }, function (err, result) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        callback(null, !!result.ok);\n      });\n    }\n  }]);\n\n  return ReIndexOperation;\n}(CommandOperationV2);\n\ndefineAspects(ReIndexOperation, [Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ReIndexOperation;","map":null,"metadata":{},"sourceType":"script"}