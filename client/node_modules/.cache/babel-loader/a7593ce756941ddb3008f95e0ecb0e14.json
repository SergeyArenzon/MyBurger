{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/sergey/Dev/MyBurger/client/src/containers/Orders/Orders.js\";\n\n/*\nimport React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Auth from \"../Auth/Auth\";\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        updated: false,\n    };\n\n    componentDidMount() {\n        if (props.auth.isAuthenticated) {\n            console.log(\"if (props.auth.isAuthenticated) \");\n            props.onFetchOrders();\n        }\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if (props.auth.isAuthenticated) {\n            if (!props.loading) {\n                orders = (\n                    <div className={classes.Orders}>\n                        <ul className>\n                            {props.orders.map((order) => {\n                                return (\n                                    <li key={order._id}>\n                                        <Order\n                                            ingredients={order.ingredients}\n                                            address={order.address}\n                                            name={order.name}\n                                            email={order.email}\n                                            price={order.price}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                );\n            }\n        } else {\n            orders = <Auth />;\n        }\n        return <div>{orders}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        auth: state.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n*/\nimport React, { useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Auth from \"../Auth/Auth\";\n\nvar orders = function orders(props) {\n  useEffect(function () {\n    if (props.auth.isAuthenticated) {\n      console.log(\"if (props.auth.isAuthenticated) \");\n      props.onFetchOrders();\n    }\n  }, []);\n  var orders = /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }\n  });\n\n  if (props.auth.isAuthenticated) {\n    if (!props.loading) {\n      orders = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Orders,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, props.orders.map(function (order) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: order._id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Order, {\n          ingredients: order.ingredients,\n          address: order.address,\n          name: order.name,\n          email: order.email,\n          price: order.price,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }));\n      })));\n    }\n  } else {\n    orders = /*#__PURE__*/React.createElement(Auth, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }, orders);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders() {\n      return dispatch(actions.fetchOrders());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(orders);","map":{"version":3,"sources":["/home/sergey/Dev/MyBurger/client/src/containers/Orders/Orders.js"],"names":["React","useEffect","Order","classes","connect","actions","Spinner","Auth","orders","props","auth","isAuthenticated","console","log","onFetchOrders","loading","Orders","map","order","_id","ingredients","address","name","email","price","mapStateToProps","state","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,IAAMC,MAAM,GAAG,gBAACC,KAAD,EAAW;AACxBR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,KAAK,CAACC,IAAN,CAAWC,eAAf,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAJ,MAAAA,KAAK,CAACK,aAAN;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,MAAIN,MAAM,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AACA,MAAIC,KAAK,CAACC,IAAN,CAAWC,eAAf,EAAgC;AAC9B,QAAI,CAACF,KAAK,CAACM,OAAX,EAAoB;AAClBP,MAAAA,MAAM,gBACJ;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,KAAK,CAACD,MAAN,CAAaS,GAAb,CAAiB,UAACC,KAAD,EAAW;AAC3B,4BACE;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AACE,UAAA,WAAW,EAAED,KAAK,CAACE,WADrB;AAEE,UAAA,OAAO,EAAEF,KAAK,CAACG,OAFjB;AAGE,UAAA,IAAI,EAAEH,KAAK,CAACI,IAHd;AAIE,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAJf;AAKE,UAAA,KAAK,EAAEL,KAAK,CAACM,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD,OAZA,CADH,CADF,CADF;AAmBD;AACF,GAtBD,MAsBO;AACLhB,IAAAA,MAAM,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,MAAN,CAAP;AACD,CAnCD;;AAqCA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLlB,IAAAA,MAAM,EAAEkB,KAAK,CAACR,KAAN,CAAYV,MADf;AAELO,IAAAA,OAAO,EAAEW,KAAK,CAACR,KAAN,CAAYH,OAFhB;AAGLL,IAAAA,IAAI,EAAEgB,KAAK,CAAChB;AAHP,GAAP;AAKD,CAND;;AAQA,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLd,IAAAA,aAAa,EAAE;AAAA,aAAMc,QAAQ,CAACvB,OAAO,CAACwB,WAAR,EAAD,CAAd;AAAA;AADV,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,MAA7C,CAAf","sourcesContent":["/*\nimport React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Auth from \"../Auth/Auth\";\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        updated: false,\n    };\n\n    componentDidMount() {\n        if (props.auth.isAuthenticated) {\n            console.log(\"if (props.auth.isAuthenticated) \");\n            props.onFetchOrders();\n        }\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if (props.auth.isAuthenticated) {\n            if (!props.loading) {\n                orders = (\n                    <div className={classes.Orders}>\n                        <ul className>\n                            {props.orders.map((order) => {\n                                return (\n                                    <li key={order._id}>\n                                        <Order\n                                            ingredients={order.ingredients}\n                                            address={order.address}\n                                            name={order.name}\n                                            email={order.email}\n                                            price={order.price}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                );\n            }\n        } else {\n            orders = <Auth />;\n        }\n        return <div>{orders}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        auth: state.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n*/\n\nimport React, { useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport classes from \"./Orders.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Auth from \"../Auth/Auth\";\n\nconst orders = (props) => {\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      console.log(\"if (props.auth.isAuthenticated) \");\n      props.onFetchOrders();\n    }\n  }, []);\n\n  let orders = <Spinner />;\n  if (props.auth.isAuthenticated) {\n    if (!props.loading) {\n      orders = (\n        <div className={classes.Orders}>\n          <ul className>\n            {props.orders.map((order) => {\n              return (\n                <li key={order._id}>\n                  <Order\n                    ingredients={order.ingredients}\n                    address={order.address}\n                    name={order.name}\n                    email={order.email}\n                    price={order.price}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      );\n    }\n  } else {\n    orders = <Auth />;\n  }\n  return <div>{orders}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(orders);\n"]},"metadata":{},"sourceType":"module"}