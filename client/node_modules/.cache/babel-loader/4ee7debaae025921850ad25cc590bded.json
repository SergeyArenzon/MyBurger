{"ast":null,"code":"import _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import * as actionTypes from \"../actions/actionTypes\";\n// import { updateObject } from \"../utility\";\n// const initialState = {\n//     token: null,\n//     userId: null,\n//     error: null,\n//     loading: false,\n// };\n// const authStart = (state, action) => {\n//     return updateObject(state, { error: null, loading: true });\n// };\n// const authSuccess = (state, action) => {\n//     return updateObject(state, {\n//         token: action.token,\n//         userId: action.userId,\n//         error: null,\n//         loading: false,\n//     });\n// };\n// const authFail = (state, action) => {\n//     return updateObject(state, { error: action.error, loading: false });\n// };\n// const authLogout = (state, action) => {\n//     return updateObject(state, { token: null, userId: null });\n// };\n// const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case actionTypes.AUTH_START:\n//             return authStart(state, action);\n//         case actionTypes.AUTH_SUCCESS:\n//             return authSuccess(state, action);\n//         case actionTypes.AUTH_FAIL:\n//             return authFail(state, action);\n//         case actionTypes.AUTH_LOGOUT:\n//             return authLogout(state, action);\n//         default:\n//             return state;\n//     }\n// };\n// export default reducer;\nimport * as actionsType from \"../actions/actionTypes\";\nvar initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionsType.USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case actionsType.USER_LOADED:\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      });\n\n    case actionsType.LOGIN_SUCCESS:\n    case actionsType.REGISTER_SUCCESS:\n      return _objectSpread({}, state, action.payload, {\n        isAuthenticated: true,\n        isLoading: false\n      });\n\n    case actionsType.AUTH_ERROR:\n    case actionsType.LOGIN_FAIL:\n    case actionsType.LOGOUT_SUCCESS:\n      localStorage.setItem('token');\n\n    case actionsType.REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return _objectSpread({}, state, {\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/store/reducers/auth.js"],"names":["actionsType","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","reducer","state","action","type","USER_LOADING","USER_LOADED","payload","LOGIN_SUCCESS","REGISTER_SUCCESS","AUTH_ERROR","LOGIN_FAIL","LOGOUT_SUCCESS","setItem","REGISTER_FAIL","removeItem"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,IAFA;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,YAAjB;AACI,+BACOH,KADP;AAEIH,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKN,WAAW,CAACa,WAAjB;AACI,+BACOJ,KADP;AAEIJ,QAAAA,eAAe,EAAE,IAFrB;AAGIC,QAAAA,SAAS,EAAE,KAHf;AAIIC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAJjB;;AAMJ,SAAKd,WAAW,CAACe,aAAjB;AACA,SAAKf,WAAW,CAACgB,gBAAjB;AACI,+BACOP,KADP,EAEOC,MAAM,CAACI,OAFd;AAGIT,QAAAA,eAAe,EAAE,IAHrB;AAIIC,QAAAA,SAAS,EAAE;AAJf;;AAMJ,SAAKN,WAAW,CAACiB,UAAjB;AACA,SAAKjB,WAAW,CAACkB,UAAjB;AACA,SAAKlB,WAAW,CAACmB,cAAjB;AACIhB,MAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB;;AACJ,SAAKpB,WAAW,CAACqB,aAAjB;AACIlB,MAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACA,+BACOb,KADP;AAEIP,QAAAA,KAAK,EAAE,IAFX;AAGIK,QAAAA,IAAI,EAAE,IAHV;AAIIF,QAAAA,eAAe,EAAE,KAJrB;AAKIC,QAAAA,SAAS,EAAE;AALf;;AAQJ;AACI,aAAOG,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["// import * as actionTypes from \"../actions/actionTypes\";\n// import { updateObject } from \"../utility\";\n\n// const initialState = {\n//     token: null,\n//     userId: null,\n//     error: null,\n//     loading: false,\n// };\n\n// const authStart = (state, action) => {\n//     return updateObject(state, { error: null, loading: true });\n// };\n\n// const authSuccess = (state, action) => {\n//     return updateObject(state, {\n//         token: action.token,\n//         userId: action.userId,\n//         error: null,\n//         loading: false,\n//     });\n// };\n\n// const authFail = (state, action) => {\n//     return updateObject(state, { error: action.error, loading: false });\n// };\n\n// const authLogout = (state, action) => {\n//     return updateObject(state, { token: null, userId: null });\n// };\n\n// const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case actionTypes.AUTH_START:\n//             return authStart(state, action);\n//         case actionTypes.AUTH_SUCCESS:\n//             return authSuccess(state, action);\n//         case actionTypes.AUTH_FAIL:\n//             return authFail(state, action);\n//         case actionTypes.AUTH_LOGOUT:\n//             return authLogout(state, action);\n//         default:\n//             return state;\n//     }\n// };\n\n// export default reducer;\n\nimport * as actionsType from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionsType.USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case actionsType.USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n            };\n        case actionsType.LOGIN_SUCCESS:\n        case actionsType.REGISTER_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n            };\n        case actionsType.AUTH_ERROR:\n        case actionsType.LOGIN_FAIL:\n        case actionsType.LOGOUT_SUCCESS:\n            localStorage.setItem('token')\n        case actionsType.REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}