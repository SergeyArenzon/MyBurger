{"ast":null,"code":"import _defineProperty from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sergey/Dev/Web/myburger/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Auth.module.css\";\nimport { updateObject } from \"../../store/utility\";\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Auth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Mail Address\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    _this.checkVaildity = function (value, rules) {\n      var isValid = true;\n\n      if (rules.required) {\n        isValid = value.trim() !== \"\" && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      console.log(value);\n      return isValid;\n    };\n\n    _this.inputChangeHandler = function (event, controlName) {\n      var updatedControls = _objectSpread({}, _this.state.controls, _defineProperty({}, controlName, _objectSpread({}, _this.state.controls[controlName], {\n        value: event.target.value,\n        valid: _this.checkVaildity(event.target.value, _this.state.controls[controlName].validation),\n        touched: true\n      })));\n\n      _this.setState({\n        controls: updatedControls\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touch: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, form, /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"SUBMIT\")));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nexport default Auth;","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","updateObject","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","checkVaildity","rules","isValid","trim","length","maxLength","console","log","inputChangeHandler","event","controlName","updatedControls","target","setState","formElementsArray","key","push","id","config","form","map","formElement","inputChangedHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Auth.module.css\";\nimport { updateObject } from \"../../store/utility\";\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"Mail Address\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    isEmail: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    minLength: 6,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n    };\n\n    checkVaildity = (value, rules) => {\n        let isValid = true;\n        if (rules.required) {\n            isValid = value.trim() !== \"\" && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        console.log(value);\n        return isValid;\n    };\n\n    inputChangeHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkVaildity(\n                    event.target.value,\n                    this.state.controls[controlName].validation\n                ),\n                touched: true,\n            },\n        };\n        this.setState({ controls: updatedControls });\n    };\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key],\n            });\n        }\n\n        const form = formElementsArray.map((formElement) => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touch={formElement.config.touched}\n                changed={(event) =>\n                    this.inputChangedHandler(event, formElement)\n                }\n            />\n        ));\n\n        return (\n            <div className={classes.Auth}>\n                <form>\n                    {form}\n                    <Button btnType={\"Success\"}>SUBMIT</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}