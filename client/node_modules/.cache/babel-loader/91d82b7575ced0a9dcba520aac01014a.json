{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./auth\";\nexport var purchaseBurgerSuccess = function purchaseBurgerSuccess(id, orderData) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport var purchaseBurgerFail = function purchaseBurgerFail(error) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport var purchaseBurgerStart = function purchaseBurgerStart() {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport var purchaseBurger = function purchaseBurger(orderData) {\n  console.log(orderData);\n  return function (dispatch, getState) {\n    dispatch(purchaseBurgerStart());\n    axios.post(\"/orders/add\", orderData, tokenConfig(getState)).then(function (response) {\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    }).catch(function (error) {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport var purchaseInit = function purchaseInit() {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport var fetchOrderSuccess = function fetchOrderSuccess(orders) {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport var fetchOrderFail = function fetchOrderFail(error) {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport var fetchOrderStart = function fetchOrderStart() {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport var fetchOrders = function fetchOrders() {\n  return function (dispatch, getState) {\n    dispatch(fetchOrderStart());\n\n    var userId = getState().auth.user._id;\n\n    console.log('------------------------');\n    console.log(userId);\n    axios.get(\"/orders\", {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      params: {\n        userId: userId\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch(fetchOrderSuccess(res.data));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(fetchOrderFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/sergey/Dev/Web/myburger/client/src/store/actions/order.js"],"names":["actionTypes","axios","tokenConfig","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","console","log","dispatch","getState","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrderSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrderFail","FETCH_ORDERS_FAIL","fetchOrderStart","FETCH_ORDERS_START","fetchOrders","userId","auth","user","_id","get","headers","params","res","err"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./auth\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData,\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error,\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START,\n    };\n};\n\nexport const purchaseBurger = (orderData) => {\n    console.log(orderData);\n    return (dispatch, getState) => {\n        dispatch(purchaseBurgerStart());\n        axios\n            .post(\"/orders/add\", orderData, tokenConfig(getState))\n            .then((response) => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch((error) => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT,\n    };\n};\n\nexport const fetchOrderSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders,\n    };\n};\n\nexport const fetchOrderFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error,\n    };\n};\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    };\n};\n\nexport const fetchOrders = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchOrderStart());\n        const userId = getState().auth.user._id;\n        console.log('------------------------')\n        console.log(userId)\n        axios\n            .get(\"/orders\", {\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                params: { userId: userId },\n            })\n            .then((res) => {\n                console.log(res);\n                dispatch(fetchOrderSuccess(res.data));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(fetchOrderFail(err));\n            });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}