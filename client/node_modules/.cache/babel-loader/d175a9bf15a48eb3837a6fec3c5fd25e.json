{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/sergey/Dev/Web/myburger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar ReadPreference = require('../core').ReadPreference;\n\nvar maxWireVersion = require('../core/utils').maxWireVersion;\n\nvar MongoError = require('../core/error').MongoError;\n\nvar FindOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(FindOperation, _OperationBase);\n\n  function FindOperation(collection, ns, command, options) {\n    var _this;\n\n    _classCallCheck(this, FindOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindOperation).call(this, options));\n    _this.ns = ns;\n    _this.cmd = command;\n    _this.readPreference = ReadPreference.resolve(collection, _this.options);\n    return _this;\n  }\n\n  _createClass(FindOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      // copied from `CommandOperationV2`, to be subclassed in the future\n      this.server = server;\n\n      if (typeof this.cmd.allowDiskUse !== 'undefined' && maxWireVersion(server) < 4) {\n        callback(new MongoError('The `allowDiskUse` option is not supported on MongoDB < 3.2'));\n        return;\n      } // TOOD: use `MongoDBNamespace` through and through\n\n\n      var cursorState = this.cursorState || {};\n      server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n    }\n  }]);\n\n  return FindOperation;\n}(OperationBase);\n\ndefineAspects(FindOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = FindOperation;","map":null,"metadata":{},"sourceType":"script"}